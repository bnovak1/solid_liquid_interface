BootStrap: docker
From: ubuntu:18.04

%labels
brian.novak.simulation@gmail.com 20190509

%environment
export LC_ALL=C
export PATH="$PATH:/usr/local/ovito/bin"
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/usr/local/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

%files
# VMD. Don't know how to download automatically. Download this manually before build.
vmd-1.9.3.bin.LINUXAMD64-CUDA8-OptiX4-OSPRay111p1.opengl.tar.gz

%post
wget -q https://packagecloud.io/AtomEditor/atom/gpgkey -O- | apt-key add -
add-apt-repository "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main"
apt-get update
apt-get install -y software-properties-common wget ssh gcc g++ git cmake libopenmpi-dev \
                   bc libqt5x11extras5 xorg freeglut3-dev mesa-utils tcsh gnuplot \
                   imagemagick atom

# Python
wget https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh
bash Miniconda3-4.5.12-Linux-x86_64.sh -b -p /usr/local/miniconda3
rm Miniconda3-4.5.12-Linux-x86_64.sh

export PATH="/usr/local/miniconda3/bin:$PATH"

conda config --append channels conda-forge
conda config --append channels bioconda

conda install -y cython=0.29.4 \
                 ipython=7.2.0 \
                 joblib=0.13.2 \
                 lmfit=0.9.12 \
                 matplotlib=3.0.2 \
                 mdanalysis=0.19.2 \
                 mdtraj=1.9.2 \
                 numpy=1.16.2 \
                 pandas=0.24.2 \
                 scikit-learn=0.20.2 \
                 scipy=1.2.0 \
                 snakemake=5.2.0 \
                 statsmodels=0.9.0 \
                 sympy=1.3 \
                 uncertainties=3.0.3 \
                 pylint=2.3.1
pip install arch==4.2 \
            ase==3.16.2 \
            atsim-potentials==0.2.1 \
            future==0.16.0
conda install -y -c pycalphad -c msys2 -c conda-forge pycalphad
git clone https://github.com/bnovak1/pytim.git
cd pytim
git checkout 4921333fac0279bb60b493bbec508985fb69beba
pip install .
cd ..

conda create -y --name CIMM2 python=2.7 \
                             cython=0.29.6 \
                             ipython=5.8.0 \
                             joblib=0.13.2 \
                             lmfit=0.9.12 \
                             matplotlib=2.2.3 \
                             mdanalysis=0.19.2 \
                             mdtraj=1.9.2 \
                             numpy=1.16.2 \
                             pandas=0.24.2 \
                             scikit-learn=0.20.3 \
                             scipy=1.2.1 \
                             statsmodels=0.9.0 \
                             sympy=1.3 \
                             uncertainties=3.0.3
. "/usr/local/miniconda3/etc/profile.d/conda.sh"
conda activate CIMM2
pip install arch==4.8.0 \
            ase==3.17.0 \
            atsim.potentials==0.2.1 \
            future==0.17.1
cd pytim
pip install .
cd ..
rm -r pytim

conda deactivate
conda clean -t -y
rm -r /usr/local/miniconda3/lib/python3.6/__pycache__

# LAMMPS from repository
add-apt-repository -y ppa:gladky-anton/lammps
apt-get install -y lammps-stable

# LAMMPS with VC-SGC
wget https://github.com/lammps/lammps/archive/stable_12Dec2018.tar.gz
tar -zxf stable_12Dec2018.tar.gz

cd lammps-stable_12Dec2018/src
wget https://vcsgc-lammps.materialsmodeling.org/vcsgc-lammps.tgz
tar xfz vcsgc-lammps.tgz
rm vcsgc-lammps.tgz

cd ../cmake
line=`cat CMakeLists.txt | awk '$1 == "set(ACCEL_PACKAGES" {print NR-1}'`
sed -E -i "${line}s|(.*)\)|\1 USER-VCSGC)|" CMakeLists.txt

cd ..
mkdir build
cd build
cmake -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D LAMMPS_MACHINE=vcsgc \
      -D BUILD_MPI=on \
      -D PKG_MANYBODY=on \
      -D PKG_MC=on \
      -D PKG_MISC=on \
      -D PKG_OPT=on \
      -D PKG_REPLICA=on \
      -D PKG_RIGID=on \
      -D PKG_USER-MEAMC=on \
      -D PKG_USER-MISC=on \
      -D PKG_USER-OMP=on \
      -D PKG_USER-VCSGC=on \
      ../cmake

make -j 10

make install

cd ../..
rm -r lammps-stable_12Dec2018/ stable_12Dec2018.tar.gz

# VMD
tar xf vmd-1.9.3.bin.LINUXAMD64-CUDA8-OptiX4-OSPRay111p1.opengl.tar.gz
cd vmd-1.9.3
./configure
cd src
make install
cd ../..
rm -r vmd-1.9.3*

# Ovito
wget https://ovito.org/download/2.9.0/ovito-2.9.0-x86_64.tar.gz
tar zxf ovito-2.9.0-x86_64.tar.gz
mv ovito-2.9.0-x86_64 /usr/local/ovito
rm ovito-2.9.0-x86_64.tar.gz
